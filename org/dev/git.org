
* general

** Change user and email of commit
: git

** log of subdirectory
: git log -- path/to/subdir

** ignore file mode (chmod) changes
: git config core.fileMode false


* modifying history

** undo commit
keeping file changes
: git reset --soft HEAD~1

discard file changes
: git reset --hard HEAD~1

* merge


** merge git repository as subdirectory

As described on [[http://stackoverflow.com/a/21495718/692634][stackoverflow.com]], to merge project ~projA~ into ~projB~:

#+BEGIN_SRC sh
 ~/projB
 ~/path/to/projA
#+END_SRC

1) create clone of ~projA~ (note: procedure rewrites history of ~projA~)

#+BEGIN_SRC 
git clone ~/path/to/projA ~/new/path/to/projA_clone
#+END_SRC 


2) in ~~/new/path/to/projA_clone~

#+BEGIN_SRC sh
PREFIX=subdir/path/in/projB  #adjust this

git filter-branch --index-filter '
    git ls-files -s |
    sed "s,\t,&'"$PREFIX"'/," |
    GIT_INDEX_FILE=$GIT_INDEX_FILE.new git update-index --index-info &&
    mv $GIT_INDEX_FILE.new $GIT_INDEX_FILE
' HEAD
#+END_SRC

where ~PREFIX~ is adjusted to relative path within ~~/projB~.

3) In ~~/projB~, simply: 

: git pull path/to/A

** merge git repository as subdirectory
(perserves history) [[https://stackoverflow.com/a/43345686/692634][stackoverflow.com]]





* global repository modifications

** "push down" repository contents into a subfolder
